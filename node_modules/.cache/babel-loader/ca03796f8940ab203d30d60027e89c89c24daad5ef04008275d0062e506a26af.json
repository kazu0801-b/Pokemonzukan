{"ast":null,"code":"var _jsxFileName = \"/Users/apple/Documents/react-zukan/reactProject/pokemon-app/src/App.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport './App.css';\nimport { getAllPokemon, getPokemon } from \"./utils/pokemon.js\";\nimport Navbar from \"./components/Navbar/Navbar\";\nimport Card from \"./components/Card/Card\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const initialURl = \"https://pokeapi.co/api/v2/pokemon\";\n  const [loading, setLoading] = useState(true);\n  const [pokemonData, setPokemonData] = useState([]);\n  useEffect(() => {\n    const fetchPokemonData = async () => {\n      //全てのポケモンデータを取得\n      let res = await getAllPokemon(initialURl);\n      //各ポケモンの詳細なデータを取得\n      loadPokemon(res.results);\n      console.log(res.next);\n      setLoading(false);\n    };\n    fetchPokemonData();\n  }, []);\n  const loadPokemon = async date => {\n    let _pokemonData = await Promise.all(date.map(pokemon => {\n      //console.log(pokemon);\n      let pokemonRecord = getPokemon(pokemon.url);\n      return pokemonRecord;\n    }));\n    setPokemonData(_pokemonData);\n  };\n\n  // console.log(pokemonData);\n  const handleNextPage = async () => {\n    setLoading(true);\n    //let data = await getAllPokemon()\n  };\n  const handlePrevPage = () => {};\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: loading ? /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"\\u30ED\\u30FC\\u30C9\\u4E2D\\u30FB\\u30FB\\u30FB\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 7\n      }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"pokemonCardContainer\",\n          children: pokemonData.map((pokemon, i) => {\n            return /*#__PURE__*/_jsxDEV(Card, {\n              pokemon: pokemon\n            }, i, false, {\n              fileName: _jsxFileName,\n              lineNumber: 51,\n              columnNumber: 20\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 10\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"btn\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handlePrevPage,\n            children: \"\\u524D\\u3078\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleNextPage,\n            children: \"\\u6B21\\u3078\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 10\n        }, this)]\n      }, void 0, true)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true);\n}\n_s(App, \"izPCWWCLYSw5gltJ8uPL1vXAwXY=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useEffect","useState","getAllPokemon","getPokemon","Navbar","Card","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","initialURl","loading","setLoading","pokemonData","setPokemonData","fetchPokemonData","res","loadPokemon","results","console","log","next","date","_pokemonData","Promise","all","map","pokemon","pokemonRecord","url","handleNextPage","handlePrevPage","children","fileName","_jsxFileName","lineNumber","columnNumber","className","i","onClick","_c","$RefreshReg$"],"sources":["/Users/apple/Documents/react-zukan/reactProject/pokemon-app/src/App.js"],"sourcesContent":["import { useEffect, useState} from \"react\";\nimport './App.css';\nimport { getAllPokemon,getPokemon } from \"./utils/pokemon.js\";\nimport Navbar from \"./components/Navbar/Navbar\";\nimport Card from \"./components/Card/Card\";\n\nfunction App() {\n  const initialURl = \"https://pokeapi.co/api/v2/pokemon\";\n  const [loading,setLoading] = useState(true);\n  const[pokemonData,setPokemonData] = useState([]);\n\n  useEffect(() => {\n    const fetchPokemonData = async () => {\n      //全てのポケモンデータを取得\n      let res = await getAllPokemon(initialURl);\n      //各ポケモンの詳細なデータを取得\n      loadPokemon(res.results);\n      console.log(res.next);\n      setLoading(false);\n    };\n    fetchPokemonData();\n  },[]);\n\n  const loadPokemon = async(date) => {\n    let _pokemonData =await  Promise.all(\n      date.map((pokemon) => {\n        //console.log(pokemon);\n        let pokemonRecord = getPokemon(pokemon.url);\n        return pokemonRecord;\n      })\n    );\n    setPokemonData(_pokemonData);\n  };\n\n  // console.log(pokemonData);\n  const handleNextPage = async () => {\n    setLoading(true);\n    //let data = await getAllPokemon()\n  };\n  const handlePrevPage =() => {};\n  return(\n  <>\n    <Navbar/>\n    <div className=\"App\">\n      {loading ? (\n      <h1>ロード中・・・</h1>\n      ) : (\n        <>\n         <div className=\"pokemonCardContainer\">\n          {pokemonData.map((pokemon,i) => {\n            return <Card key={i} pokemon={pokemon}/>;\n          })}\n         </div>\n         <div className=\"btn\">\n          <button onClick={handlePrevPage}>前へ</button>\n          <button onClick={handleNextPage}>次へ</button>\n          </div>\n        </>\n      )}\n    </div>\n  </>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}